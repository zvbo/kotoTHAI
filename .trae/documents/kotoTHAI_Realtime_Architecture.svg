<svg xmlns="http://www.w3.org/2000/svg" width="1180" height="760" viewBox="0 0 1180 760">
  <defs>
    <style>
      .title{font:700 22px sans-serif;fill:#222}
      .label{font:600 14px sans-serif;fill:#222}
      .small{font:400 12px sans-serif;fill:#333}
      .box{fill:#fff;stroke:#999;stroke-width:1.5}
      .group{fill:#f8fafc;stroke:#cbd5e1;stroke-width:1.5}
      .arrow{stroke:#555;stroke-width:1.5;marker-end:url(#arrowhead)}
      .note{fill:#fefce8;stroke:#f59e0b}
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#555" />
    </marker>
  </defs>

  <text x="30" y="40" class="title">kotoTHAI 实时翻译架构（直连 A 与桥接 B）</text>

  <!-- Frontend Group -->
  <rect x="20" y="70" width="520" height="650" rx="8" class="group"/>
  <text x="30" y="95" class="label">前端（React Native App / iOS）</text>

  <rect x="40" y="120" width="220" height="80" rx="8" class="box"/>
  <text x="50" y="145" class="label">AppContext / LanguageSelector</text>
  <text x="50" y="165" class="small">sourceLanguage / targetLanguage</text>

  <rect x="300" y="120" width="220" height="80" rx="8" class="box"/>
  <text x="310" y="145" class="label">hooks/useRealtime.ts</text>
  <text x="310" y="165" class="small">获取临时密钥、创建 RTCPeerConnection</text>

  <rect x="40" y="220" width="220" height="70" rx="8" class="box"/>
  <text x="50" y="245" class="label">app/(tabs)/index.tsx</text>
  <text x="50" y="265" class="small">编排 UI 与会话开关</text>

  <rect x="300" y="220" width="220" height="70" rx="8" class="box"/>
  <text x="310" y="245" class="label">react-native-webrtc</text>
  <text x="310" y="265" class="small">媒体能力与 WebRTC</text>

  <!-- Backend Group -->
  <rect x="560" y="70" width="600" height="650" rx="8" class="group"/>
  <text x="570" y="95" class="label">后端（Agent Server）</text>

  <rect x="580" y="120" width="260" height="90" rx="8" class="box"/>
  <text x="590" y="145" class="label">/api/ephemeral → ephemeral.ts</text>
  <text x="590" y="165" class="small">buildInstructions(source, target)</text>
  <text x="590" y="185" class="small">sessions.create(model, voice, instructions)</text>

  <rect x="860" y="120" width="280" height="90" rx="8" class="box"/>
  <text x="870" y="145" class="label">Realtime（OpenAI）</text>
  <text x="870" y="165" class="small">WebRTC 会话（语音上下行）</text>

  <rect x="580" y="240" width="260" height="90" rx="8" class="box"/>
  <text x="590" y="265" class="label">realtime/agentBridge.ts</text>
  <text x="590" y="285" class="small">桥接模式下的提示词与会话</text>

  <rect x="860" y="240" width="280" height="90" rx="8" class="box"/>
  <text x="870" y="265" class="label">realtime/webrtc.ts + audio.ts</text>
  <text x="870" y="285" class="small">桥接时的信令转发与音频处理</text>

  <!-- Flow A: Direct -->
  <text x="30" y="330" class="label">路径 A：前端直连 Realtime（默认）</text>

  <line x1="250" y1="160" x2="300" y2="160" class="arrow"/>
  <text x="255" y="150" class="small">语言设置</text>

  <line x1="410" y1="200" x2="580" y2="165" class="arrow"/>
  <text x="470" y="190" class="small">POST /api/ephemeral</text>

  <line x1="520" y1="260" x2="880" y2="165" class="arrow"/>
  <text x="610" y="255" class="small">临时密钥 → 直连 WebRTC</text>

  <!-- Flow B: Bridge -->
  <text x="30" y="440" class="label">路径 B：服务端桥接</text>

  <line x1="410" y1="255" x2="580" y2="285" class="arrow"/>
  <text x="420" y="275" class="small">信令/语言</text>

  <line x1="710" y1="285" x2="860" y2="285" class="arrow"/>
  <text x="720" y="275" class="small">创建会话</text>

  <rect x="40" y="480" width="1080" height="110" rx="8" class="note"/>
  <text x="50" y="505" class="label">提示词生效原则</text>
  <text x="50" y="525" class="small">直连模式：ephemeral.ts 的 buildInstructions 生效；桥接模式：agentBridge.ts 的提示词生效</text>

  <rect x="40" y="610" width="1080" height="90" rx="8" class="note"/>
  <text x="50" y="635" class="label">调参指引</text>
  <text x="50" y="655" class="small">改“翻译风格/是否闲聊/输出格式” → 改 buildInstructions；改“模型/音色” → 调整 sessions.create 的 model/voice</text>
</svg>